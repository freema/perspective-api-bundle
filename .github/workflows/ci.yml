name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  php-cs-fixer:
    name: PHP-CS-Fixer
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          tools: php-cs-fixer:3.14

      - name: Check code style
        run: php-cs-fixer fix --dry-run --diff

  phpstan:
    name: PHPStan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          coverage: none

      - name: Install composer dependencies
        run: |
          composer update --no-interaction --no-progress --prefer-lowest
          composer install --no-interaction --no-progress

      - name: Verify phpstan.neon exists
        run: |
          if [ ! -f phpstan.neon ]; then
            echo "phpstan.neon does not exist!"
            exit 1
          fi
          cat phpstan.neon

      - name: Run PHPStan
        run: vendor/bin/phpstan analyse src -c phpstan.neon

  tests:
    name: Tests (PHP ${{ matrix.php-version }}, Symfony ${{ matrix.symfony-version }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - php-version: '8.1'
            symfony-version: '5.4'
            test-directory: 'test/symfony54'
          - php-version: '8.1'
            symfony-version: '6.4'
            test-directory: 'test/symfony64'
          - php-version: '8.2'
            symfony-version: '7.1'
            test-directory: 'test/symfony71'

    steps:
      - uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          coverage: pcov

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache composer dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Prepare test environment
        run: |
          rm -rf .symfony-test
          mkdir -p .symfony-test/vendor
          cp -r src .symfony-test/
          
          # Copy tests based on Symfony version
          if [ "${{ matrix.symfony-version }}" = "7.1" ]; then
            # Symfony 7.1 - copy all tests including Form tests
            cp -r tests .symfony-test/
            cp phpunit-with-form.xml.dist .symfony-test/phpunit.xml
          else
            # Symfony 5.4/6.4 - copy tests except Form tests
            mkdir -p .symfony-test/tests
            cp -r tests/DependencyInjection .symfony-test/tests/
            cp -r tests/Dto .symfony-test/tests/
            cp -r tests/Service .symfony-test/tests/
            cp -r tests/Validator .symfony-test/tests/
            cp phpunit.xml.dist .symfony-test/phpunit.xml
          fi
          
          cp ${{ matrix.test-directory }}/composer.json .symfony-test/composer.json

      - name: Install test dependencies
        working-directory: .symfony-test
        run: composer install --no-interaction --no-progress

      - name: Run tests
        working-directory: .symfony-test
        run: vendor/bin/phpunit